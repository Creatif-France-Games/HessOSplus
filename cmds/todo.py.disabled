import os

CONFIG_PATH = os.path.join(os.getcwd(), "config", "todo.txt")

def run(args):
    
    os.makedirs(os.path.dirname(CONFIG_PATH), exist_ok=True)

    if not os.path.exists(CONFIG_PATH):
        with open(CONFIG_PATH, "w", encoding="utf-8") as f:
            pass

    if not args:
        print("Usage: todo <add|list|remove> [text|index]")
        return

    cmd = args[0].lower()

    
    if cmd == "add":
        if len(args) < 2:
            print("Usage: todo add <task>")
            return
        task = " ".join(args[1:])
        with open(CONFIG_PATH, "a", encoding="utf-8") as f:
            f.write(task + "\n")
        print(f"Tâche ajoutée: {task}")

    
    elif cmd == "list":
        with open(CONFIG_PATH, "r", encoding="utf-8") as f:
            tasks = [line.strip() for line in f if line.strip()]
        if not tasks:
            print("No task on your todolist")
            return
        for i, t in enumerate(tasks, start=1):
            print(f"{i}. {t}")

    
    elif cmd == "remove":
        if len(args) < 2:
            print("Usage: todo remove <index>")
            return
        try:
            index = int(args[1]) - 1
            with open(CONFIG_PATH, "r", encoding="utf-8") as f:
                tasks = [line.strip() for line in f if line.strip()]
            if index < 0 or index >= len(tasks):
                print("Index invalid.")
                return
            removed = tasks.pop(index)
            with open(CONFIG_PATH, "w", encoding="utf-8") as f:
                f.write("\n".join(tasks) + ("\n" if tasks else ""))
            print(f"Task deleted: {removed}")
        except ValueError:
            print("Index must be a number")

    else:
        print("Unknow command. Use: add, list, remove")
